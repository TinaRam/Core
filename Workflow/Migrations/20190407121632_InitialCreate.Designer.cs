// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Workflow.Models;

namespace Workflow.Migrations
{
    [DbContext(typeof(WorkflowContext))]
    [Migration("20190407121632_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.2-servicing-10034");

            modelBuilder.Entity("Workflow.Models.AssignedTask", b =>
                {
                    b.Property<int>("AssignedTaskId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int(11)");

                    b.Property<int>("TaskId")
                        .HasColumnType("int(11)");

                    b.Property<int>("UserId")
                        .HasColumnType("int(11)");

                    b.HasKey("AssignedTaskId");

                    b.HasIndex("TaskId")
                        .HasName("AssignedTaskPTaskFK");

                    b.ToTable("AssignedTask","app2000g11");
                });

            modelBuilder.Entity("Workflow.Models.EmployeeLeave", b =>
                {
                    b.Property<int>("LeaveId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)");

                    b.Property<DateTime?>("FromDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("ToDate")
                        .HasColumnType("date");

                    b.Property<int>("UserId")
                        .HasColumnType("int(11)");

                    b.HasKey("LeaveId");

                    b.HasIndex("UserId")
                        .HasName("EmployeeLeaveUserFK");

                    b.ToTable("EmployeeLeave","app2000g11");
                });

            modelBuilder.Entity("Workflow.Models.Event", b =>
                {
                    b.Property<int>("EventId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)");

                    b.Property<int>("CreatorId")
                        .HasColumnType("int(11)");

                    b.Property<DateTime?>("EventDate")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int(11)");

                    b.Property<int?>("TaskId")
                        .HasColumnType("int(11)");

                    b.Property<int?>("TaskListId")
                        .HasColumnType("int(11)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(55)
                        .IsUnicode(false);

                    b.Property<int?>("UserId")
                        .HasColumnType("int(11)");

                    b.HasKey("EventId");

                    b.HasIndex("CreatorId")
                        .HasName("EventUserFK");

                    b.HasIndex("ProjectId")
                        .HasName("EventProjectFK");

                    b.HasIndex("TaskId")
                        .HasName("EventPTaskFK");

                    b.HasIndex("UserId")
                        .HasName("EventUserIIFK");

                    b.ToTable("Event","app2000g11");
                });

            modelBuilder.Entity("Workflow.Models.Notification", b =>
                {
                    b.Property<int>("Nid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("NId")
                        .HasColumnType("int(11)");

                    b.Property<byte?>("Email")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("EventId")
                        .HasColumnType("int(11)");

                    b.Property<byte?>("InApp")
                        .HasColumnType("tinyint(1)");

                    b.Property<byte?>("Viewed")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValueSql("0");

                    b.HasKey("Nid");

                    b.HasIndex("EventId")
                        .HasName("NotificationEventFK");

                    b.ToTable("Notification","app2000g11");
                });

            modelBuilder.Entity("Workflow.Models.Project", b =>
                {
                    b.Property<int>("ProjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)");

                    b.Property<DateTime?>("CompletionDate")
                        .HasColumnType("date");

                    b.Property<byte?>("MarkedAsFinished")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("ProjectDeadline")
                        .HasColumnType("date");

                    b.Property<string>("ProjectDescription")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<int?>("ProjectManager")
                        .HasColumnType("int(11)");

                    b.Property<string>("ProjectName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<DateTime?>("ProjectStart")
                        .HasColumnType("date");

                    b.HasKey("ProjectId");

                    b.HasIndex("ProjectManager")
                        .HasName("ProjectUserFK");

                    b.ToTable("Project","app2000g11");
                });

            modelBuilder.Entity("Workflow.Models.ProjectParticipant", b =>
                {
                    b.Property<int>("ProjectId")
                        .HasColumnType("int(11)");

                    b.Property<int>("UserId")
                        .HasColumnType("int(11)");

                    b.HasKey("ProjectId", "UserId");

                    b.HasIndex("UserId")
                        .HasName("ProjectParticipantUserFK");

                    b.ToTable("ProjectParticipant","app2000g11");
                });

            modelBuilder.Entity("Workflow.Models.Ptask", b =>
                {
                    b.Property<int>("TaskId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)");

                    b.Property<DateTime?>("CompletionDate")
                        .HasColumnType("date");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Priority")
                        .HasColumnType("enum('low','normal','high')");

                    b.Property<DateTime?>("TaskCreationDate")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<DateTime?>("TaskDeadline")
                        .HasColumnType("date");

                    b.Property<int?>("TaskListId")
                        .HasColumnType("int(11)");

                    b.Property<string>("TaskName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<int?>("TaskProjectId")
                        .HasColumnType("int(11)");

                    b.HasKey("TaskId");

                    b.HasIndex("TaskListId")
                        .HasName("PTaskTaskListFK");

                    b.HasIndex("TaskProjectId")
                        .HasName("PTaskProjectFK");

                    b.ToTable("PTask","app2000g11");
                });

            modelBuilder.Entity("Workflow.Models.Report", b =>
                {
                    b.Property<int>("ReportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)");

                    b.Property<string>("Comment")
                        .IsUnicode(false);

                    b.Property<DateTime?>("CompletionDate")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int(11)");

                    b.HasKey("ReportId");

                    b.HasIndex("ProjectId")
                        .HasName("ReportProjectFK");

                    b.ToTable("Report","app2000g11");
                });

            modelBuilder.Entity("Workflow.Models.TaskList", b =>
                {
                    b.Property<int>("TaskListId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)");

                    b.Property<string>("ListName")
                        .HasMaxLength(55)
                        .IsUnicode(false);

                    b.Property<int>("ProjectId")
                        .HasColumnType("int(11)");

                    b.HasKey("TaskListId");

                    b.HasIndex("ProjectId")
                        .HasName("TaskListFK");

                    b.ToTable("TaskList","app2000g11");
                });

            modelBuilder.Entity("Workflow.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)");

                    b.Property<string>("About")
                        .IsUnicode(false);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(55)
                        .IsUnicode(false);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(55)
                        .IsUnicode(false);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(55)
                        .IsUnicode(false);

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(11)
                        .IsUnicode(false);

                    b.Property<int?>("Role")
                        .HasColumnType("int(11)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(55)
                        .IsUnicode(false);

                    b.HasKey("UserId");

                    b.ToTable("User","app2000g11");
                });

            modelBuilder.Entity("Workflow.Models.AssignedTask", b =>
                {
                    b.HasOne("Workflow.Models.Ptask", "Task")
                        .WithMany("AssignedTask")
                        .HasForeignKey("TaskId")
                        .HasConstraintName("AssignedTaskPTaskFK");
                });

            modelBuilder.Entity("Workflow.Models.EmployeeLeave", b =>
                {
                    b.HasOne("Workflow.Models.User", "User")
                        .WithMany("EmployeeLeave")
                        .HasForeignKey("UserId")
                        .HasConstraintName("EmployeeLeaveUserFK");
                });

            modelBuilder.Entity("Workflow.Models.Event", b =>
                {
                    b.HasOne("Workflow.Models.User", "Creator")
                        .WithMany("EventCreator")
                        .HasForeignKey("CreatorId")
                        .HasConstraintName("EventUserFK");

                    b.HasOne("Workflow.Models.Project", "Project")
                        .WithMany("Event")
                        .HasForeignKey("ProjectId")
                        .HasConstraintName("EventProjectFK");

                    b.HasOne("Workflow.Models.Ptask", "Task")
                        .WithMany("Event")
                        .HasForeignKey("TaskId")
                        .HasConstraintName("EventPTaskFK");

                    b.HasOne("Workflow.Models.User", "User")
                        .WithMany("EventUser")
                        .HasForeignKey("UserId")
                        .HasConstraintName("EventUserIIFK");
                });

            modelBuilder.Entity("Workflow.Models.Notification", b =>
                {
                    b.HasOne("Workflow.Models.Event", "Event")
                        .WithMany("Notification")
                        .HasForeignKey("EventId")
                        .HasConstraintName("NotificationEventFK");
                });

            modelBuilder.Entity("Workflow.Models.Project", b =>
                {
                    b.HasOne("Workflow.Models.User", "ProjectManagerNavigation")
                        .WithMany("Project")
                        .HasForeignKey("ProjectManager")
                        .HasConstraintName("ProjectUserFK");
                });

            modelBuilder.Entity("Workflow.Models.ProjectParticipant", b =>
                {
                    b.HasOne("Workflow.Models.Project", "Project")
                        .WithMany("ProjectParticipant")
                        .HasForeignKey("ProjectId")
                        .HasConstraintName("ProjectParticipantProjectFK");

                    b.HasOne("Workflow.Models.User", "User")
                        .WithMany("ProjectParticipant")
                        .HasForeignKey("UserId")
                        .HasConstraintName("ProjectParticipantUserFK");
                });

            modelBuilder.Entity("Workflow.Models.Ptask", b =>
                {
                    b.HasOne("Workflow.Models.TaskList", "TaskList")
                        .WithMany("Ptask")
                        .HasForeignKey("TaskListId")
                        .HasConstraintName("PTaskTaskListFK");

                    b.HasOne("Workflow.Models.Project", "TaskProject")
                        .WithMany("Ptask")
                        .HasForeignKey("TaskProjectId")
                        .HasConstraintName("PTaskProjectFK");
                });

            modelBuilder.Entity("Workflow.Models.Report", b =>
                {
                    b.HasOne("Workflow.Models.Project", "Project")
                        .WithMany("Report")
                        .HasForeignKey("ProjectId")
                        .HasConstraintName("ReportProjectFK");
                });

            modelBuilder.Entity("Workflow.Models.TaskList", b =>
                {
                    b.HasOne("Workflow.Models.Project", "Project")
                        .WithMany("TaskList")
                        .HasForeignKey("ProjectId")
                        .HasConstraintName("TaskListFK");
                });
#pragma warning restore 612, 618
        }
    }
}
