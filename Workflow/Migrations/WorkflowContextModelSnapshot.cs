// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Workflow.Models;

namespace Workflow.Migrations
{
    [DbContext(typeof(WorkflowContext))]
    partial class WorkflowContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.2-servicing-10034");

            modelBuilder.Entity("Workflow.Models.AssignedTask", b =>
                {
                    b.Property<int>("EmployeeId")
                        .HasColumnName("EmployeeID")
                        .HasColumnType("int(11)");

                    b.Property<int>("TaskId")
                        .HasColumnName("TaskID")
                        .HasColumnType("int(11)");

                    b.HasKey("EmployeeId", "TaskId");

                    b.HasIndex("TaskId")
                        .HasName("AssignedTaskPTaskFK");

                    b.ToTable("AssignedTask","Workflow");
                });

            modelBuilder.Entity("Workflow.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("EmployeeID")
                        .HasColumnType("int(11)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(55)
                        .IsUnicode(false);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(55)
                        .IsUnicode(false);

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(11)
                        .IsUnicode(false);

                    b.Property<int>("UserId")
                        .HasColumnName("UserID")
                        .HasColumnType("int(11)");

                    b.HasKey("EmployeeId");

                    b.HasIndex("UserId")
                        .HasName("EmployeeUserFK");

                    b.ToTable("Employee","Workflow");
                });

            modelBuilder.Entity("Workflow.Models.PTask", b =>
                {
                    b.Property<int>("TaskId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("TaskID")
                        .HasColumnType("int(11)");

                    b.Property<DateTime?>("CompletionDate")
                        .HasColumnType("date");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Priority")
                        .HasColumnType("enum('low','normal','high')");

                    b.Property<DateTime?>("TaskCreationDate")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<DateTime?>("TaskDeadline")
                        .HasColumnType("date");

                    b.Property<string>("TaskName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<int?>("TaskProjectId")
                        .HasColumnName("TaskProjectID")
                        .HasColumnType("int(11)");

                    b.HasKey("TaskId");

                    b.HasIndex("TaskProjectId")
                        .HasName("PTaskProjectFK");

                    b.ToTable("PTask","Workflow");
                });

            modelBuilder.Entity("Workflow.Models.Project", b =>
                {
                    b.Property<int>("ProjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ProjectID")
                        .HasColumnType("int(11)");

                    b.Property<DateTime?>("CompletionDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("ProjectDeadline")
                        .HasColumnType("date");

                    b.Property<string>("ProjectDescription")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<int?>("ProjectManager")
                        .HasColumnType("int(11)");

                    b.Property<string>("ProjectName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<DateTime?>("ProjectStart")
                        .HasColumnType("date");

                    b.HasKey("ProjectId");

                    b.HasIndex("ProjectManager")
                        .HasName("ProjectEmployeeFK");

                    b.ToTable("Project","Workflow");
                });

            modelBuilder.Entity("Workflow.Models.ProjectParticipant", b =>
                {
                    b.Property<int>("ProjectId")
                        .HasColumnName("ProjectID")
                        .HasColumnType("int(11)");

                    b.Property<int>("EmployeeId")
                        .HasColumnName("EmployeeID")
                        .HasColumnType("int(11)");

                    b.HasKey("ProjectId", "EmployeeId");

                    b.HasIndex("EmployeeId")
                        .HasName("ProjectParticipantEmployeeFK");

                    b.ToTable("ProjectParticipant","Workflow");
                });

            modelBuilder.Entity("Workflow.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UserID")
                        .HasColumnType("int(11)");

                    b.Property<byte>("IsAdmin")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(55)
                        .IsUnicode(false);

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(55)
                        .IsUnicode(false);

                    b.HasKey("UserId");

                    b.ToTable("User","Workflow");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            IsAdmin = (byte)1,
                            Password = "123",
                            Username = "pernille"
                        },
                        new
                        {
                            UserId = 2,
                            IsAdmin = (byte)1,
                            Password = "paracet",
                            Username = "tinahodepina"
                        });
                });

            modelBuilder.Entity("Workflow.Models.AssignedTask", b =>
                {
                    b.HasOne("Workflow.Models.Employee", "Employee")
                        .WithMany("AssignedTask")
                        .HasForeignKey("EmployeeId")
                        .HasConstraintName("AssignedTaskEmployeeFK");

                    b.HasOne("Workflow.Models.PTask", "Task")
                        .WithMany("AssignedTask")
                        .HasForeignKey("TaskId")
                        .HasConstraintName("AssignedTaskPTaskFK");
                });

            modelBuilder.Entity("Workflow.Models.Employee", b =>
                {
                    b.HasOne("Workflow.Models.User", "User")
                        .WithMany("Employee")
                        .HasForeignKey("UserId")
                        .HasConstraintName("EmployeeUserFK");
                });

            modelBuilder.Entity("Workflow.Models.PTask", b =>
                {
                    b.HasOne("Workflow.Models.Project", "TaskProject")
                        .WithMany("PTask")
                        .HasForeignKey("TaskProjectId")
                        .HasConstraintName("PTaskProjectFK");
                });

            modelBuilder.Entity("Workflow.Models.Project", b =>
                {
                    b.HasOne("Workflow.Models.Employee", "ProjectManagerNavigation")
                        .WithMany("Project")
                        .HasForeignKey("ProjectManager")
                        .HasConstraintName("ProjectEmployeeFK");
                });

            modelBuilder.Entity("Workflow.Models.ProjectParticipant", b =>
                {
                    b.HasOne("Workflow.Models.Employee", "Employee")
                        .WithMany("ProjectParticipant")
                        .HasForeignKey("EmployeeId")
                        .HasConstraintName("ProjectParticipantEmployeeFK");

                    b.HasOne("Workflow.Models.Project", "Project")
                        .WithMany("ProjectParticipant")
                        .HasForeignKey("ProjectId")
                        .HasConstraintName("ProjectParticipantProjectFK");
                });
#pragma warning restore 612, 618
        }
    }
}
